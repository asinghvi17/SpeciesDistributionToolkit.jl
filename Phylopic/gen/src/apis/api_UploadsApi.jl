# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct UploadsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `UploadsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ UploadsApi }) = "https://api.phylopic.org"

const _returntypes_post_upload_UploadsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Link,
    Regex("^" * replace("401", "x"=>".") * "\$") => Errors,
    Regex("^" * replace("413", "x"=>".") * "\$") => Errors,
    Regex("^" * replace("415", "x"=>".") * "\$") => Errors,
)

function _oacinternal_post_upload(_api::UploadsApi, content_type::String, body::Vector{UInt8}; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_post_upload_UploadsApi, "/uploads", ["bearerAuth", ], body)
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/vnd.phylopic.v2+json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["image/bmp", "image/gif", "image/jpeg", "image/png", "image/svg+xml", ] : [_mediaType])
    return _ctx
end

@doc raw"""Uploads a file

On success, redirects to a location where the file can be downloaded from.

Params:
- content_type::String (required)
- body::String (required)

Return: Link, OpenAPI.Clients.ApiResponse
"""
function post_upload(_api::UploadsApi, content_type::String, body::String; _mediaType=nothing)
    _ctx = _oacinternal_post_upload(_api, content_type, body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function post_upload(_api::UploadsApi, response_stream::Channel, content_type::String, body::String; _mediaType=nothing)
    _ctx = _oacinternal_post_upload(_api, content_type, body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export post_upload

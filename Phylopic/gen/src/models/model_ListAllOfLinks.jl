# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""List_allOf__links

    ListAllOfLinks(;
        firstPage=nothing,
        lastPage=nothing,
        self=nothing,
    )

    - firstPage::ListAllOfLinksFirstPage
    - lastPage::ListAllOfLinksFirstPage
    - self::Link
"""
Base.@kwdef mutable struct ListAllOfLinks <: OpenAPI.APIModel
    firstPage = nothing # spec type: Union{ Nothing, ListAllOfLinksFirstPage }
    lastPage = nothing # spec type: Union{ Nothing, ListAllOfLinksFirstPage }
    self = nothing # spec type: Union{ Nothing, Link }

    function ListAllOfLinks(firstPage, lastPage, self, )
        OpenAPI.validate_property(ListAllOfLinks, Symbol("firstPage"), firstPage)
        OpenAPI.validate_property(ListAllOfLinks, Symbol("lastPage"), lastPage)
        OpenAPI.validate_property(ListAllOfLinks, Symbol("self"), self)
        return new(firstPage, lastPage, self, )
    end
end # type ListAllOfLinks

const _property_types_ListAllOfLinks = Dict{Symbol,String}(Symbol("firstPage")=>"ListAllOfLinksFirstPage", Symbol("lastPage")=>"ListAllOfLinksFirstPage", Symbol("self")=>"Link", )
OpenAPI.property_type(::Type{ ListAllOfLinks }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListAllOfLinks[name]))}

function check_required(o::ListAllOfLinks)
    o.firstPage === nothing && (return false)
    o.lastPage === nothing && (return false)
    o.self === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ListAllOfLinks }, name::Symbol, val)
end

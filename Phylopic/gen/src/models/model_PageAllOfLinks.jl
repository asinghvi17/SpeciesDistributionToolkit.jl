# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Page_allOf__links

    PageAllOfLinks(;
        items=nothing,
        list=nothing,
        next=nothing,
        previous=nothing,
    )

    - items::Vector{TitledLink} : Links to the entities in the page.
    - list::PageAllOfLinksList
    - next::PageAllOfLinksNext
    - previous::PageAllOfLinksPrevious
"""
Base.@kwdef mutable struct PageAllOfLinks <: OpenAPI.APIModel
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TitledLink} }
    list = nothing # spec type: Union{ Nothing, PageAllOfLinksList }
    next = nothing # spec type: Union{ Nothing, PageAllOfLinksNext }
    previous = nothing # spec type: Union{ Nothing, PageAllOfLinksPrevious }

    function PageAllOfLinks(items, list, next, previous, )
        OpenAPI.validate_property(PageAllOfLinks, Symbol("items"), items)
        OpenAPI.validate_property(PageAllOfLinks, Symbol("list"), list)
        OpenAPI.validate_property(PageAllOfLinks, Symbol("next"), next)
        OpenAPI.validate_property(PageAllOfLinks, Symbol("previous"), previous)
        return new(items, list, next, previous, )
    end
end # type PageAllOfLinks

const _property_types_PageAllOfLinks = Dict{Symbol,String}(Symbol("items")=>"Vector{TitledLink}", Symbol("list")=>"PageAllOfLinksList", Symbol("next")=>"PageAllOfLinksNext", Symbol("previous")=>"PageAllOfLinksPrevious", )
OpenAPI.property_type(::Type{ PageAllOfLinks }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PageAllOfLinks[name]))}

function check_required(o::PageAllOfLinks)
    o.items === nothing && (return false)
    o.list === nothing && (return false)
    o.next === nothing && (return false)
    o.previous === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PageAllOfLinks }, name::Symbol, val)
end

# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""getNamespaces_200_response_inner

    GetNamespaces200ResponseInner(;
        authority=nothing,
        namespace=nothing,
    )

    - authority::String
    - namespace::String
"""
Base.@kwdef mutable struct GetNamespaces200ResponseInner <: OpenAPI.APIModel
    authority::Union{Nothing, String} = nothing
    namespace::Union{Nothing, String} = nothing

    function GetNamespaces200ResponseInner(authority, namespace, )
        OpenAPI.validate_property(GetNamespaces200ResponseInner, Symbol("authority"), authority)
        OpenAPI.validate_property(GetNamespaces200ResponseInner, Symbol("namespace"), namespace)
        return new(authority, namespace, )
    end
end # type GetNamespaces200ResponseInner

const _property_types_GetNamespaces200ResponseInner = Dict{Symbol,String}(Symbol("authority")=>"String", Symbol("namespace")=>"String", )
OpenAPI.property_type(::Type{ GetNamespaces200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetNamespaces200ResponseInner[name]))}

function check_required(o::GetNamespaces200ResponseInner)
    o.authority === nothing && (return false)
    o.namespace === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetNamespaces200ResponseInner }, name::Symbol, val)
end

# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""getIndex_200_response

    GetIndex200Response(;
        _links=nothing,
        build=nothing,
        buildTimestamp=nothing,
        title=nothing,
        version=nothing,
    )

    - _links::GetIndex200ResponseLinks
    - build::Int64 : Index number of the current data build.
    - buildTimestamp::String : Timestamp of the current data build.
    - title::String
    - version::String : Latest semantic version of the API.
"""
Base.@kwdef mutable struct GetIndex200Response <: OpenAPI.APIModel
    _links = nothing # spec type: Union{ Nothing, GetIndex200ResponseLinks }
    build::Union{Nothing, Int64} = nothing
    buildTimestamp::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    version::Union{Nothing, String} = nothing

    function GetIndex200Response(_links, build, buildTimestamp, title, version, )
        OpenAPI.validate_property(GetIndex200Response, Symbol("_links"), _links)
        OpenAPI.validate_property(GetIndex200Response, Symbol("build"), build)
        OpenAPI.validate_property(GetIndex200Response, Symbol("buildTimestamp"), buildTimestamp)
        OpenAPI.validate_property(GetIndex200Response, Symbol("title"), title)
        OpenAPI.validate_property(GetIndex200Response, Symbol("version"), version)
        return new(_links, build, buildTimestamp, title, version, )
    end
end # type GetIndex200Response

const _property_types_GetIndex200Response = Dict{Symbol,String}(Symbol("_links")=>"GetIndex200ResponseLinks", Symbol("build")=>"Int64", Symbol("buildTimestamp")=>"String", Symbol("title")=>"String", Symbol("version")=>"String", )
OpenAPI.property_type(::Type{ GetIndex200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetIndex200Response[name]))}

function check_required(o::GetIndex200Response)
    o._links === nothing && (return false)
    o.build === nothing && (return false)
    o.buildTimestamp === nothing && (return false)
    o.title === nothing && (return false)
    o.version === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetIndex200Response }, name::Symbol, val)
    if name === Symbol("buildTimestamp")
        OpenAPI.validate_param(name, "GetIndex200Response", :pattern, val, r"^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$")
    end
    if name === Symbol("version")
        OpenAPI.validate_param(name, "GetIndex200Response", :pattern, val, r"^\d+\.\d+\.\d+(-(alpha|beta|rc)(\.\d+)?)?$")
    end
end

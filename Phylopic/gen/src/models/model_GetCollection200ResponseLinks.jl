# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""getCollection_200_response__links

    GetCollection200ResponseLinks(;
        contributors=nothing,
        images=nothing,
        nodes=nothing,
        self=nothing,
    )

    - contributors::Link
    - images::Link
    - nodes::Link
    - self::Link
"""
Base.@kwdef mutable struct GetCollection200ResponseLinks <: OpenAPI.APIModel
    contributors = nothing # spec type: Union{ Nothing, Link }
    images = nothing # spec type: Union{ Nothing, Link }
    nodes = nothing # spec type: Union{ Nothing, Link }
    self = nothing # spec type: Union{ Nothing, Link }

    function GetCollection200ResponseLinks(contributors, images, nodes, self, )
        OpenAPI.validate_property(GetCollection200ResponseLinks, Symbol("contributors"), contributors)
        OpenAPI.validate_property(GetCollection200ResponseLinks, Symbol("images"), images)
        OpenAPI.validate_property(GetCollection200ResponseLinks, Symbol("nodes"), nodes)
        OpenAPI.validate_property(GetCollection200ResponseLinks, Symbol("self"), self)
        return new(contributors, images, nodes, self, )
    end
end # type GetCollection200ResponseLinks

const _property_types_GetCollection200ResponseLinks = Dict{Symbol,String}(Symbol("contributors")=>"Link", Symbol("images")=>"Link", Symbol("nodes")=>"Link", Symbol("self")=>"Link", )
OpenAPI.property_type(::Type{ GetCollection200ResponseLinks }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetCollection200ResponseLinks[name]))}

function check_required(o::GetCollection200ResponseLinks)
    o.contributors === nothing && (return false)
    o.images === nothing && (return false)
    o.nodes === nothing && (return false)
    o.self === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetCollection200ResponseLinks }, name::Symbol, val)
end
